// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package _sysutils.actions;

import java.util.Collection;
import java.util.stream.Collectors;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.UserAction;

/**
 * like getOriginalValueAsString but returns the actual value and it can also return empty and for references it returns comma-separated list of numbers
 */
public class GetMemberValueAsString extends UserAction<java.lang.String>
{
	private final IMendixObject obj;
	private final java.lang.String member;

	public GetMemberValueAsString(
		IContext context,
		IMendixObject _obj,
		java.lang.String _member
	)
	{
		super(context);
		this.obj = _obj;
		this.member = _member;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
        final IMendixObject obj2 = obj;
        final String member2 = member;
        return getMemberValueAsString(getContext(), obj2, member2);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GetMemberValueAsString";
	}

	// BEGIN EXTRA CODE

    static String getMemberValueAsString(
            final IContext context,
            final IMendixObject obj,
            final String member) {
        Object value = obj.getValue(context, member);
        if (value instanceof Collection) {
            @SuppressWarnings("unchecked")
            final
            Collection<IMendixIdentifier> refs = (Collection<IMendixIdentifier>) value;
            value =
                refs.stream().map(x -> Long.toString(x.toLong())).collect(Collectors.joining(","));
        } else if (value instanceof IMendixIdentifier) {
            value = Long.toString(((IMendixIdentifier) value).toLong());
        }
        return value == null ? null : value.toString();
    }

	// END EXTRA CODE
}
